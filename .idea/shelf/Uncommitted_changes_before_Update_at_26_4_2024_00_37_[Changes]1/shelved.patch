Index: tp1_fig_san/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tp1_fig_san/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst b/tp1_fig_san/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
new file mode 100644
--- /dev/null	
+++ b/tp1_fig_san/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst	
@@ -0,0 +1,28 @@
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\Modelo\Acciones\AccionStartGame.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\GUI\InfoWindow.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\Modelo\Personajes\Personaje.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\GUI\InstructionBox.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\GUI\Vista.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\GUI\RobotApp.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\Modelo\Acciones\AccionMovimiento.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\GUI\Grilla.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\GUI\auxiliares\CustomButton.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\GUI\auxiliares\ObjetoConTexto.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\Modelo\Acciones\AccionTeleportRandom.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\Modelo\Listeners\ListenerTPSafe.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\Modelo\Personajes\RobotX2.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\GUI\InitialScene.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\GUI\PanelPosterior.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\Modelo\Acciones\Action.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\GUI\GameScene.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\GUI\auxiliares\CustomLabel.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\Modelo\Acciones\AccionTeleport.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\Modelo\Listeners\ListenerLevelUp.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\Modelo\Personajes\RobotX1.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\Modelo\Listeners\ListenerGameOver.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\Modelo\Personajes\Jugador.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\module-info.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\Vec2D.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\Modelo\Tablero.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\Modelo\EstadoDeJuego.java
+C:\Users\Usuario\IdeaProjects\FIG-SAN_TP1_PARADIGMAS\tp1_fig_san\src\main\java\robot\Modelo\Personajes\Robot.java
Index: tp1_fig_san/src/main/java/robot/Modelo/EstadoDeJuego.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package robot.Modelo;\r\n\r\nimport robot.Modelo.Acciones.Action;\r\nimport robot.Modelo.Listeners.ListenerGameOver;\r\nimport robot.Modelo.Listeners.ListenerLevelUp;\r\nimport robot.Modelo.Listeners.ListenerTPSafe;\r\nimport robot.Modelo.Personajes.RobotX1;\r\nimport robot.Modelo.Personajes.RobotX2;\r\nimport robot.Vec2D;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class EstadoDeJuego {\r\n    private int score;\r\n    private Tablero tablero;\r\n    private int cantSafeTeleport;\r\n    private int nivel;\r\n\r\n    private ListenerGameOver listenerGameOver;\r\n    private ListenerTPSafe listenerTPSafe;\r\n    private ListenerLevelUp listenerLevelUp;\r\n\r\n\r\n    public  enum EtiquetasModelo{CANTIDAD_FIL,CANTIDAD_COL,NOMBRE,TP_SAFE,TLP_RANDOM,ESPERAR,SCORE,NIVEL,JUGAR};\r\n    private static final String[] etiquetas = new String[]{\"Cantidad de filas:\",\"Cantidad de columnas:\",\"ROBOT\", \"Teleport Safe:\",\"Teleport Random\",\"Esperar\",\"Score:\",\"nivel:\",\"JUGAR!\"};\r\n\r\n    public static String getEtiqueta(EtiquetasModelo etiqueta) { return etiquetas[etiqueta.ordinal()];}\r\n    //PRE:\r\n    //POST:\r\n    public EstadoDeJuego(int largoX, int largoY){\r\n        reset(largoX,largoY);\r\n    }\r\n\r\n    //PRE: tablero ya inicializado y nivel>0\r\n    //POST:\r\n    public void startGame(){\r\n        tablero.startPoint(nivel);\r\n    }\r\n\r\n    //PRE:\r\n    //POST: Inicializa atributos de Estado de Juego\r\n    public void reset(int largoX, int largoY){\r\n        score =0;\r\n        cantSafeTeleport=1;\r\n        nivel=1;\r\n        tablero= new Tablero(largoX, largoY);\r\n        startGame();\r\n    }\r\n\r\n    //PRE: tablero ya inicializado\r\n    //POST: pregunta si se ganó o si se perdió\r\n    public void actualizarEstadoJuego(){\r\n        if (tablero.win()){\r\n            nextLevel();\r\n        } else if (tablero.lose()) {\r\n            listenerGameOver.gameOver();\r\n        }\r\n    }\r\n\r\n    //PRE:Accion inicializada\r\n    //POST: Ejecuta la accion\r\n    public void update(Action a){\r\n        a.aplicar(this);\r\n        actualizarEstadoJuego();\r\n    }\r\n\r\n    //PRE: direccion inicializada\r\n    //POST: realiza la jugada y los posiciona\r\n    private void posicionarScene(Vec2D nuevaPosicion){\r\n        tablero.moverJugador(nuevaPosicion);\r\n        tablero.perseguirJugador();\r\n    }\r\n\r\n    //PRE:\r\n    //POST: Sube de nivel y reinicia el tablero\r\n    public void nextLevel(){\r\n        score+=100*nivel;\r\n        nivel++;\r\n        cantSafeTeleport++;\r\n        startGame();\r\n        listenerLevelUp.levelUp(EtiquetasModelo.NIVEL+\" \"+nivel,EtiquetasModelo.SCORE+\" \"+score,EtiquetasModelo.TP_SAFE+\" \"+cantSafeTeleport);\r\n    }\r\n\r\n    public void registrarListenerLevelUp(ListenerLevelUp listener){listenerLevelUp=listener;}\r\n\r\n    //PRE:  direccion inicializada\r\n    //POST:\r\n    public void realizarJugada(Vec2D nuevaPosicion){\r\n        if (posicionFueraDelTablero((int) nuevaPosicion.getX(), (int) nuevaPosicion.getY())){\r\n            return;\r\n        }\r\n        posicionarScene(nuevaPosicion);\r\n        actualizarEstadoJuego();\r\n    }\r\n\r\n    //PRE: tablero inicializado\r\n    //POST: comprueba si la posicion que debe moverse esta fuera del tablero\r\n    private boolean posicionFueraDelTablero(int x, int y){\r\n        return (x>= tablero.getLargoX() || x< 0 ||y>= tablero.getLargoY() ||y<0);\r\n    }\r\n\r\n    //PRE:  tablero inicializado\r\n    //POST:\r\n    public Vec2D posicionJugador(){\r\n        return tablero.posJug();\r\n    }\r\n\r\n    //PRE: tablero inicializado\r\n    //POST: retorna un vector aleatorio dentro del tablero\r\n    public Vec2D vecRandom(){\r\n        return tablero.vectorRandom();\r\n    }\r\n\r\n    //PRE:  tablero inicializado\r\n    //POST:\r\n    public ArrayList<Vec2D> posicionesFuego(){\r\n        return tablero.getFuegos();\r\n    }\r\n\r\n    //PRE: tablero inicializado\r\n    //POST:\r\n    public ArrayList<Vec2D> posicionesRobotsX1() { return tablero.getPosicionesRobot(RobotX1.class);}\r\n\r\n    //PRE: tablero inicializado\r\n    //POST:\r\n    public ArrayList<Vec2D> posicionesRobotsX2(){\r\n        return tablero.getPosicionesRobot(RobotX2.class);\r\n    }\r\n\r\n\r\n\r\n    //PRE: listener inicializado\r\n    //POST: le agrega el listener al estado de juego para saber cuando perdio\r\n    public void registrarListenerGameOver(ListenerGameOver listener){\r\n        listenerGameOver = listener;\r\n    }\r\n\r\n    public void registrarListenerTPdisponibles(ListenerTPSafe listener){\r\n        listenerTPSafe= listener;\r\n    }\r\n\r\n    public boolean usarTpSafe(){\r\n        if (cantSafeTeleport==0){\r\n            return false;\r\n        }\r\n        cantSafeTeleport--;\r\n        listenerTPSafe.tpUsado(getEtiqueta(EtiquetasModelo.TP_SAFE)+\" \"+cantSafeTeleport);\r\n        return true;\r\n    }\r\n\r\n\r\n    public int getPuntuacion() {\r\n        return score;\r\n    }\r\n    public void setPuntuacion(int puntuacion) {\r\n        this.score = puntuacion;\r\n    }\r\n    public Tablero getTablero() {\r\n        return tablero;\r\n    }\r\n    public void setTablero(Tablero tablero) {\r\n        this.tablero = tablero;\r\n    }\r\n    public int getCantSafeTeleport() {\r\n        return cantSafeTeleport;\r\n    }\r\n    public void setCantSafeTeleport(int cantSafeTeleport) {\r\n        this.cantSafeTeleport = cantSafeTeleport;\r\n    }\r\n    public int getNivel() {\r\n        return nivel;\r\n    }\r\n    public void setNivel(int nivel) {\r\n        this.nivel = nivel;\r\n    }\r\n\r\n\r\n    //falta terminar xd\r\n    public static String[] getInstruccionesModelo(){\r\n        return new String[]{ \"Para no perder ante los robots ten en cuenta:\",\r\n                \"- No dejes que te alcancen, los robots te persiguen.\",\r\n                \"- Hay robots que avanzan de a dos celdas, y robots que avanzan de a una.\",\r\n                \"- Lográs que dos robots mueran si colisionan.\",\r\n                \"- Producto de la muerte de un robot hay celdas incendiadas.\",\r\n                \"- Pisar una celda incendiada te mata vos y cualquier robot\",\r\n                \"- pasas de nivel cuando todos los robots muerieron\",\r\n                \"- inicialemente tienes 1 un teleport \",\r\n        };\r\n    }\r\n    public static String[] InstructionsControlGame(){\r\n        return new String[]{\"Para moverte puedes: \",\r\n                \"- Clickear a donde querés ir (movimiento de a 1)\",\r\n                \"- W: Arriba,S: Abajo,A: Izquierda,D: Derecha\",\r\n                \"- E: Diagonal derecha superior\",\r\n                \"- Q: Diagonal izquierda superior\",\r\n                \"- C: Diagonal derecha inferior\",\r\n                \"- Z: Diagonal izquierda inferior\",\r\n                \"- X: Esperar\"};\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tp1_fig_san/src/main/java/robot/Modelo/EstadoDeJuego.java b/tp1_fig_san/src/main/java/robot/Modelo/EstadoDeJuego.java
--- a/tp1_fig_san/src/main/java/robot/Modelo/EstadoDeJuego.java	
+++ b/tp1_fig_san/src/main/java/robot/Modelo/EstadoDeJuego.java	
@@ -41,7 +41,7 @@
     //POST: Inicializa atributos de Estado de Juego
     public void reset(int largoX, int largoY){
         score =0;
-        cantSafeTeleport=1;
+        cantSafeTeleport=50;
         nivel=1;
         tablero= new Tablero(largoX, largoY);
         startGame();
